dnl Process this file with autoconf to produce a configure script.
dnl Copyright (c) 1999-2004 Philip Kendall
dnl Copyright (c) 2007 Stuart Brady

dnl $Id$

dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License along
dnl with this program; if not, write to the Free Software Foundation, Inc.,
dnl 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
dnl
dnl Author contact information:
dnl
dnl E-mail: sdbrady@ntlworld.com

AC_INIT(image.c)
AM_CONFIG_HEADER(config.h)

dnl Use automake to produce `Makefile.in'
AM_INIT_AUTOMAKE(libgdos, 1.0.0)

dnl Checks for programs.
AC_PROG_CC

dnl XXX
dnl Setup for compiling build tools (make-perl)
AC_MSG_CHECKING([for a C compiler for build tools])
if test $cross_compiling = yes; then
  AC_CHECK_PROGS(CC_FOR_BUILD, gcc cc)
else
  CC_FOR_BUILD=$CC
fi
AC_MSG_RESULT([$CC_FOR_BUILD])
AC_SUBST(CC_FOR_BUILD)

AM_PROG_LIBTOOL

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(stdint.h strings.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Check for big endianness
AC_C_BIGENDIAN

dnl Check for functions
AC_CHECK_FUNCS(_snprintf _stricmp _strnicmp snprintf strcasecmp strncasecmp)

dnl Allow the user to say that various libraries are in one place
AC_ARG_WITH(local-prefix,
[  --with-local-prefix=PFX local libraries installed in PFX (optional)],
CPPFLAGS="$CPPFLAGS -I$withval/include"; LDFLAGS="$LDFLAGS -L$withval/lib",
if test "$prefix" != "NONE"; then
  CPPFLAGS="$CPPFLAGS -I$prefix/include"; LDFLAGS="$LDFLAGS -L$prefix/lib"
fi)

dnl If it appears we're using gcc as our compiler, turn on warnings
if test "$ac_cv_prog_gcc" = yes; then
  CFLAGS="$CFLAGS -Wall"
  dnl And possibly lots of warnings
  AC_MSG_CHECKING(whether lots of warnings requested)
  AC_ARG_ENABLE(warnings,
  [  --enable-warnings       give lots of warnings if using gcc],
  if test "$enableval" = yes; then
    warnings=yes;
  else
    warnings=no;
  fi,
  warnings=no)
  AC_MSG_RESULT($warnings)
  if test "$warnings" = yes; then
      CFLAGS="$CFLAGS -Wstrict-prototypes -Wmissing-prototypes -Winline -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Waggregate-return -W -Wsign-compare"
  fi
fi

dnl Check that libdsk is available
AC_ARG_WITH(libdsk-prefix,
[  --with-libdsk-prefix=PFX where libdsk is installed (optional)],
LIBDSK_CFLAGS=-I$withval/include; LIBDSK_LIBS=-L$withval/lib,
LIBDSK_CFLAGS=""; LIBDSK_LIBS="")
ac_save_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $LIBDSK_CFLAGS"
AC_CHECK_HEADERS(libdsk.h, LIBDSK_LIBS="$LIBDSK_LIBS -ldsk",
		 AC_MSG_ERROR(Sorry - I need libdsk to be available))
CPPFLAGS="$ac_save_CPPFLAGS"
AC_SUBST(LIBDSK_CFLAGS)
AC_SUBST(LIBDSK_LIBS)

AC_OUTPUT(
  Makefile
)
